<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="84">
  <server artifactsdir="artifacts" agentAutoRegisterKey="bc46f2e1-acfa-4025-a8ee-9daa327fbe1c" commandRepositoryLocation="default" serverId="17138edc-fcdb-432c-8aab-5c8cdcc2cab6">
    <security>
      <passwordFile path="/etc/htpasswd" />
      <roles>
        <role name="TestDataSetupUser">
          <users>
            <user>donald</user>
          </users>
        </role>
        <role name="readonly">
          <users>
            <user>gocd-odm-external</user>
          </users>
        </role>
      </roles>
      <admins>
        <user>depot</user>
      </admins>
    </security>
  </server>
  <pipelines group="depot-management">
    <authorization>
      <view>
        <role>TestDataSetupUser</role>
        <role>readonly</role>
      </view>
    </authorization>
    <pipeline name="stock-location" isLocked="false" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">stocklocation</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_stocklocation" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="goods-receiving-service" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">goodsreceivingservice</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_goodsreceivingservice" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="jobs-service" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">jobs</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_jobs" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="depot-settings" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">depotsettings</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_depotsettings" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="goods-receiving-import" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">goodsreceivingimport</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <environmentvariables>
        <variable name="SECRETS_DIR">
          <value>/var/go/secrets</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_goodsreceivingimport" />
      </materials>
    </pipeline>
    <pipeline name="relocation-service" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">relocation</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_relocation" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="location-import" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">locationimport</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_locationimport" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="sscc" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">sscc</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_sscc" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="solr-jobs">
      <params>
        <param name="IMAGE_NAMESPACE">mcc5-docker2-pp.metroscales.io/dev/betty_orderfulfillment</param>
        <param name="IMAGE_VERSION">DEV</param>
        <param name="IMAGE">solr_jobs</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_solr_jobs" shallowClone="true" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="docker">
                <arg>pull</arg>
                <arg>mcc5-docker2-pp.metroscales.io/dev/betty_platform/solr_base:latest</arg>
                <runif status="passed" />
              </exec>
              <exec command="./build.sh">
                <arg>#{IMAGE_NAMESPACE}/#{IMAGE}:#{IMAGE_VERSION}</arg>
                <runif status="passed" />
              </exec>
              <exec command="docker">
                <arg>push</arg>
                <arg>#{IMAGE_NAMESPACE}/#{IMAGE}:#{IMAGE_VERSION}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="solr-location-search">
      <params>
        <param name="IMAGE_NAMESPACE">mcc5-docker2-pp.metroscales.io/dev/betty_orderfulfillment</param>
        <param name="IMAGE_VERSION">DEV</param>
        <param name="IMAGE">solr_locations</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_solr_locationsearch" materialName="betty_orderfulfillment_solr_locationsearch" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="docker">
                <arg>pull</arg>
                <arg>mcc5-docker2-pp.metroscales.io/dev/betty_platform/solr_base:latest</arg>
                <runif status="passed" />
              </exec>
              <exec command="./build.sh" workingdir="solr_locations">
                <arg>#{IMAGE_NAMESPACE}/#{IMAGE}:#{IMAGE_VERSION}</arg>
                <runif status="passed" />
              </exec>
              <exec command="docker">
                <arg>push</arg>
                <arg>#{IMAGE_NAMESPACE}/#{IMAGE}:#{IMAGE_VERSION}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="store-settings-importer" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">storesettingsimporter</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_storesettingsimporter" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="jobs-reindexer">
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_jobs_reindexer" shallowClone="true" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="./build-util/build.sh">
                <arg>DEV</arg>
                <runif status="passed" />
              </exec>
              <exec command="./build-util/push.sh">
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="depot-management-ui" template="build_and_push_service">
      <params>
        <param name="VERTICAL">depotmanagement</param>
        <param name="SERVICE_NAME">ui</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_ui" shallowClone="true" />
      </materials>
    </pipeline>
    <pipeline name="functional-test" isLocked="true">
      <params>
        <param name="ENV">local</param>
        <param name="COUNTRY">DE</param>
        <param name="DEPOT">DE_STOREDEPOT_00109</param>
        <param name="MODE">SETUP</param>
      </params>
      <environmentvariables>
        <variable name="SECRETS_DIR">
          <value>/var/go/secrets</value>
        </variable>
        <variable name="ENV">
          <value>GoCD</value>
        </variable>
        <variable name="SERVICE_IP">
          <value>pl.localhost</value>
        </variable>
        <variable name="SERVICE_PORT">
          <value>8080</value>
        </variable>
        <variable name="PORT">
          <value>4321</value>
        </variable>
        <variable name="MODE">
          <value>ADVANCED</value>
        </variable>
        <variable name="FILTER">
          <value>@advancedSmoke</value>
        </variable>
        <variable name="LANGUAGE">
          <value>PL</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="goods-receiving-service" stageName="push" materialName="goods-receiving-service" />
        <pipeline pipelineName="stock-location" stageName="push" materialName="stock-location" />
        <pipeline pipelineName="sscc" stageName="push" materialName="sscc" />
        <pipeline pipelineName="jobs-service" stageName="push" materialName="job-service" />
        <pipeline pipelineName="depot-settings" stageName="push" materialName="depot-settings" />
        <pipeline pipelineName="goods-receiving-import" stageName="push" materialName="goods-receiving-import" />
        <pipeline pipelineName="relocation-service" stageName="push" materialName="relocation-service" />
        <pipeline pipelineName="location-import" stageName="push" materialName="location-import" />
        <pipeline pipelineName="store-settings-importer" stageName="push" materialName="store-settings-importer" />
        <pipeline pipelineName="depot-management-ui" stageName="push" materialName="depot-management-ui" />
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_functional_test" shallowClone="true" dest="betty_depotmanagement_functional_test" materialName="betty_depotmanagement_functional_test" />
        <pipeline pipelineName="country-settings-importer" stageName="push" materialName="country-settings-importer" />
        <pipeline pipelineName="advanced-stock-location" stageName="push" materialName="advanced-stock-location" />
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" dest="betty_depotmanagement_testdata" materialName="betty_depotmanagement_testdata" />
      </materials>
      <stage name="ft">
        <jobs>
          <job name="run">
            <tasks>
              <exec command="./gradlew" workingdir="betty_depotmanagement_functional_test">
                <arg>clean</arg>
                <arg>dockerComposeUp</arg>
                <runif status="passed" />
              </exec>
              <exec command="./main.sh" workingdir="betty_depotmanagement_testdata">
                <arg>-local</arg>
                <arg>DE</arg>
                <arg>DE_STOREDEPOT_00015</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gradlew" workingdir="betty_depotmanagement_functional_test">
                <arg>functionalTestExecute</arg>
                <arg>dockerComposeStop</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <test src="betty_depotmanagement_functional_test/test_output" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="functional-test-pp" isLocked="false" template="functional-test">
      <params>
        <param name="PORT_PREFIX">44</param>
        <param name="TD_DEPOT">PL_STOREDEPOT_00002</param>
        <param name="TD_COUNTRY">PL</param>
        <param name="TD_ENV">pp</param>
      </params>
      <timer>* 0 0-23/4 * * ?</timer>
      <environmentvariables>
        <variable name="ENV">
          <value>PP</value>
        </variable>
        <variable name="SECRETS_DIR">
          <value>/var/go/secrets</value>
        </variable>
        <variable name="SERVICE_IP">
          <value>pl.betty-pp.metrosystems.net</value>
        </variable>
        <variable name="SERVICE_PORT">
          <value>443</value>
        </variable>
        <variable name="LANGUAGE">
          <value>PL</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_functional_test" dest="betty_depotmanagement_functional_test" materialName="betty_depotmanagement_functional_test" />
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" dest="betty_depotmanagement_testdata" materialName="betty_depotmanagement_testdata" />
      </materials>
    </pipeline>
    <pipeline name="functional-test-dev" isLocked="true" template="functional-test">
      <params>
        <param name="PORT_PREFIX">45</param>
        <param name="TD_COUNTRY">PL</param>
        <param name="TD_DEPOT">PL_STOREDEPOT_00002</param>
        <param name="TD_ENV">dev</param>
      </params>
      <environmentvariables>
        <variable name="ENV">
          <value>DEV</value>
        </variable>
        <variable name="SERVICE_IP">
          <value>pl.betty-dev.metrosystems.net</value>
        </variable>
        <variable name="SECRETS_DIR">
          <value>/var/go/secrets</value>
        </variable>
        <variable name="SERVICE_PORT">
          <value>442</value>
        </variable>
        <variable name="LANGUAGE">
          <value>PL</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_functional_test" dest="betty_depotmanagement_functional_test" materialName="betty_depotmanagement_functional_test" />
        <pipeline pipelineName="deploy-to-dev" stageName="deploy" materialName="deploy-to-dev" />
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" dest="betty_depotmanagement_testdata" materialName="betty_depotmanagement_testdata" />
      </materials>
    </pipeline>
    <pipeline name="deploy-to-dev" isLocked="true">
      <materials>
        <pipeline pipelineName="functional-test" stageName="ft" />
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_version" dest="deployedVersions" autoUpdate="false" materialName="betty_orderfulfillment_version" />
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_build_support" dest="betty_build_support" autoUpdate="false" materialName="betty_build_support" />
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_infrastructure" dest="betty_depotmanagement_infrastructure" autoUpdate="false" materialName="betty_depotmanagement_infrastructure" />
      </materials>
      <stage name="deploy" cleanWorkingDir="true">
        <jobs>
          <job name="dev">
            <tasks>
              <exec command="git" workingdir="deployedVersions">
                <arg>pull</arg>
                <arg>--rebase</arg>
                <runif status="passed" />
              </exec>
              <exec command="git" workingdir="betty_build_support">
                <arg>pull</arg>
                <arg>--rebase</arg>
                <runif status="passed" />
              </exec>
              <exec command="git" workingdir="betty_depotmanagement_infrastructure">
                <arg>pull</arg>
                <arg>--rebase</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact pipeline="sscc/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/sscc">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="goods-receiving-service/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/goodsreceivingservice">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="stock-location/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/stocklocation">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="jobs-service/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/jobs">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="depot-settings/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/depotsettings">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="goods-receiving-import/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/goodsreceivingimport">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="relocation-service/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/relocation">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="location-import/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/locationimport">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="store-settings-importer/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/storesettingsimporter">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="depot-management-ui/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/depotmanagementui">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="country-settings-importer/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/countrysettingsimporter">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="advanced-stock-location/functional-test" stage="push" job="push" srcfile="deploy.properties" dest="buildVersions/advstocklocation">
                <runif status="passed" />
              </fetchartifact>
              <exec command="./deploy_to_dev.sh" workingdir="betty_depotmanagement_infrastructure">
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="CDC" isLocked="false">
      <params>
        <param name="ENV">pp</param>
        <param name="COUNTRY">DE</param>
        <param name="MODE">-c</param>
        <param name="DEPOT">DE_STOREDEPOT_00109</param>
      </params>
      <environmentvariables>
        <variable name="SECRETS_DIR">
          <value>/var/go/secrets</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_cdc_runner" dest="betty_depotmanagement_cdc_runner" materialName="betty_depotmanagement_cdc_runner" />
        <pipeline pipelineName="stock-location" stageName="build" materialName="stock-location" />
        <pipeline pipelineName="sscc" stageName="build" materialName="sscc" />
        <pipeline pipelineName="goods-receiving-import" stageName="build" materialName="goods-receiving-import" />
        <pipeline pipelineName="goods-receiving-service" stageName="build" materialName="goods-receiving-service" />
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" dest="betty_depotmanagement_testdata" materialName="betty_depotmanagement_testdata" />
      </materials>
      <stage name="test-data-setup">
        <jobs>
          <job name="data_reset">
            <tasks>
              <exec command="./main.sh" workingdir="betty_depotmanagement_testdata">
                <arg>-#{ENV}</arg>
                <arg>#{MODE}</arg>
                <arg>#{COUNTRY}</arg>
                <arg>#{DEPOT}</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="run" cleanWorkingDir="true">
        <jobs>
          <job name="pactVerify">
            <tasks>
              <fetchartifact pipeline="stock-location" stage="build" job="build" srcdir="pacts" dest="betty_depotmanagement_cdc_runner/target">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="sscc" stage="build" job="build" srcdir="pacts" dest="betty_depotmanagement_cdc_runner/target">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="goods-receiving-import" stage="build" job="build" srcdir="pacts" dest="betty_depotmanagement_cdc_runner/target">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="goods-receiving-service" stage="build" job="build" srcdir="pacts" dest="betty_depotmanagement_cdc_runner/target">
                <runif status="passed" />
              </fetchartifact>
              <exec command="./gradlew" workingdir="betty_depotmanagement_cdc_runner">
                <arg>pactVerify</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="country-settings-importer" template="build_and_push_service">
      <params>
        <param name="VERTICAL">orderfulfillment</param>
        <param name="SERVICE_NAME">countrysettingsimporter</param>
        <param name="IMAGE_TAG">DEV</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_orderfulfillment_countrysettingsimporter" shallowClone="true" materialName="betty_orderfulfillment_countrysettingsimporter" />
      </materials>
    </pipeline>
    <pipeline name="advanced-stock-location" template="build_and_push_service">
      <params>
        <param name="IMAGE_TAG">DEV</param>
        <param name="SERVICE_NAME">advstocklocation</param>
        <param name="VERTICAL">depotmanagement</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_advstocklocation" />
      </materials>
    </pipeline>
  </pipelines>
  <pipelines group="test-data-creation">
    <authorization>
      <view>
        <role>TestDataSetupUser</role>
      </view>
      <operate>
        <role>TestDataSetupUser</role>
      </operate>
    </authorization>
    <pipeline name="Test-data-creation_PP_DE_00109" isLocked="false" template="test-data-creation">
      <params>
        <param name="ENV">pp</param>
        <param name="COUNTRY">DE</param>
        <param name="DEPOT">DE_STOREDEPOT_00109</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" />
      </materials>
    </pipeline>
    <pipeline name="Test-data-creation_PP_PL_00002" isLocked="false" template="test-data-creation">
      <params>
        <param name="ENV">pp</param>
        <param name="COUNTRY">PL</param>
        <param name="DEPOT">PL_STOREDEPOT_00002</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" />
      </materials>
    </pipeline>
    <pipeline name="Test-data-creation_PP_PL_00003" isLocked="false" template="test-data-creation">
      <params>
        <param name="ENV">pp</param>
        <param name="COUNTRY">PL</param>
        <param name="DEPOT">PL_STOREDEPOT_00003</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" />
      </materials>
    </pipeline>
    <pipeline name="Test-data-creation_PP_DE_00030" isLocked="false" template="test-data-creation">
      <params>
        <param name="ENV">pp</param>
        <param name="COUNTRY">DE</param>
        <param name="DEPOT">DE_STOREDEPOT_00030</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" />
      </materials>
    </pipeline>
    <pipeline name="Test-data-creation_DEV_PL_00002" isLocked="false" template="test-data-creation">
      <params>
        <param name="ENV">dev</param>
        <param name="COUNTRY">PL</param>
        <param name="DEPOT">PL_STOREDEPOT_00002</param>
      </params>
      <materials>
        <git url="ssh://puja.mantri@gerrit.metrosystems.net:2222/betty_depotmanagement_testdata" />
      </materials>
    </pipeline>
  </pipelines>
  <templates>
    <pipeline name="build_and_push_service">
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="git">
                <arg>submodule</arg>
                <arg>update</arg>
                <arg>--remote</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gradlew">
                <arg>clean</arg>
                <arg>build</arg>
              </exec>
            </tasks>
            <artifacts>
              <artifact src="server/target/pacts" />
              <test src="integrationtest/build/reports/tests/index.html" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="push">
        <jobs>
          <job name="push">
            <tasks>
              <exec command="git">
                <arg>submodule</arg>
                <arg>update</arg>
                <arg>--remote</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gradlew">
                <arg>-PdockerBranch=#{IMAGE_TAG}</arg>
                <arg>dockerBuild</arg>
                <runif status="passed" />
              </exec>
              <exec command="./betty_build_support/bin/gradle-and-docker.py">
                <arg>push</arg>
                <arg>--vertical</arg>
                <arg>#{VERTICAL}</arg>
                <arg>--service</arg>
                <arg>#{SERVICE_NAME}</arg>
                <arg>--tag</arg>
                <arg>#{IMAGE_TAG}</arg>
                <arg>--write-deploy-properties</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="build/deploy.properties" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="test-data-creation">
      <stage name="create">
        <environmentvariables>
          <variable name="SECRETS_DIR">
            <value>/var/go/secrets</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="test-data">
            <tasks>
              <exec command="./main.sh">
                <arg>-#{ENV}</arg>
                <arg>#{COUNTRY}</arg>
                <arg>#{DEPOT}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="json/tmp/*.json" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="functional-test">
      <stage name="test-data-reset">
        <jobs>
          <job name="test-data">
            <tasks>
              <exec command="./main.sh" workingdir="betty_depotmanagement_testdata">
                <arg>-#{TD_ENV}</arg>
                <arg>#{TD_COUNTRY}</arg>
                <arg>#{TD_DEPOT}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="smoke">
        <environmentvariables>
          <variable name="SECRETS_DIR">
            <value>/var/go/secrets</value>
          </variable>
          <variable name="SERVICE_PORT">
            <value>443</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="test-basic-mode">
            <environmentvariables>
              <variable name="PORT">
                <value>#{PORT_PREFIX}21</value>
              </variable>
              <variable name="MODE">
                <value>BASIC</value>
              </variable>
              <variable name="FILTER">
                <value>@basicSmoke</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./gradlew" workingdir="betty_depotmanagement_functional_test">
                <arg>clean</arg>
                <arg>smokeTest</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <test src="betty_depotmanagement_functional_test/test_output" />
            </artifacts>
          </job>
          <job name="test-advanced-mode">
            <environmentvariables>
              <variable name="PORT">
                <value>#{PORT_PREFIX}22</value>
              </variable>
              <variable name="MODE">
                <value>ADVANCED</value>
              </variable>
              <variable name="IS_INTERNAL">
                <value>NO</value>
              </variable>
              <variable name="FILTER">
                <value>@advancedSmoke</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./gradlew" workingdir="betty_depotmanagement_functional_test">
                <arg>clean</arg>
                <arg>smokeTest</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <test src="betty_depotmanagement_functional_test/test_output" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
</cruise>
